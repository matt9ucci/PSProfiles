using namespace System.Management.Automation

Register-ArgumentCompleter -CommandName pwsh -ScriptBlock {
	param ([string]$wordToComplete)
	if ($wordToComplete.StartsWith('-')) {
		@(
			[CompletionResult]::new('-File', '-File', 'ParameterName', 'If the value of File is "-", the command text is read from standard input.')
			[CompletionResult]::new('-f', '-f', 'ParameterName', 'If the value of File is "-", the command text is read from standard input.')
			[CompletionResult]::new('-Command', '-Command', 'ParameterName', 'Executes the specified commands (and any parameters) as though they were typed at the PowerShell command prompt, and then exits, unless the NoExit parameter is specified.')
			[CompletionResult]::new('-c', '-c', 'ParameterName', 'Executes the specified commands (and any parameters) as though they were typed at the PowerShell command prompt, and then exits, unless the NoExit parameter is specified.')
			[CompletionResult]::new('-ConfigurationName', '-ConfigurationName', 'ParameterName', 'Specifies a configuration endpoint in which PowerShell is run.')
			[CompletionResult]::new('-config', '-config', 'ParameterName', 'Specifies a configuration endpoint in which PowerShell is run.')
			[CompletionResult]::new('-CustomPipeName', '-CustomPipeName', 'ParameterName', 'Specifies the name to use for an additional IPC server (named pipe) used for debugging and other cross-process communication.')
			[CompletionResult]::new('-EncodedCommand', '-EncodedCommand', 'ParameterName', 'Accepts a Base64-encoded string version of a command.')
			[CompletionResult]::new('-e', '-e', 'ParameterName', 'Accepts a Base64-encoded string version of a command.')
			[CompletionResult]::new('-ec', '-ec', 'ParameterName', 'Accepts a Base64-encoded string version of a command.')
			[CompletionResult]::new('-ExecutionPolicy', '-ExecutionPolicy', 'ParameterName', 'Sets the default execution policy for the current session and saves it in the $env:PSExecutionPolicyPreference environment variable.')
			[CompletionResult]::new('-ex', '-ex', 'ParameterName', 'Sets the default execution policy for the current session and saves it in the $env:PSExecutionPolicyPreference environment variable.')
			[CompletionResult]::new('-ep', '-ep', 'ParameterName', 'Sets the default execution policy for the current session and saves it in the $env:PSExecutionPolicyPreference environment variable.')
			[CompletionResult]::new('-InputFormat', '-InputFormat', 'ParameterName', 'Describes the format of data sent to PowerShell.')
			[CompletionResult]::new('-inp', '-inp', 'ParameterName', 'Describes the format of data sent to PowerShell.')
			[CompletionResult]::new('-if', '-if', 'ParameterName', 'Describes the format of data sent to PowerShell.')
			[CompletionResult]::new('-Interactive', '-Interactive', 'ParameterName', 'Present an interactive prompt to the user.')
			[CompletionResult]::new('-i', '-i', 'ParameterName', 'Present an interactive prompt to the user.')
			[CompletionResult]::new('-Login', '-Login', 'ParameterName', 'On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to execute login profiles such as /etc/profile and ~/.')
			[CompletionResult]::new('-l', '-l', 'ParameterName', 'On Linux and macOS, starts PowerShell as a login shell, using /bin/sh to execute login profiles such as /etc/profile and ~/.')
			[CompletionResult]::new('-MTA', '-MTA', 'ParameterName', 'Start PowerShell using a multi-threaded apartment.')
			[CompletionResult]::new('-NoExit', '-NoExit', 'ParameterName', 'Does not exit after running startup commands.')
			[CompletionResult]::new('-noe', '-noe', 'ParameterName', 'Does not exit after running startup commands.')
			[CompletionResult]::new('-NoLogo', '-NoLogo', 'ParameterName', 'Hides the copyright banner at startup of interactive sessions.')
			[CompletionResult]::new('-nol', '-nol', 'ParameterName', 'Hides the copyright banner at startup of interactive sessions.')
			[CompletionResult]::new('-NonInteractive', '-NonInteractive', 'ParameterName', 'Does not present an interactive prompt to the user.')
			[CompletionResult]::new('-noni', '-noni', 'ParameterName', 'Does not present an interactive prompt to the user.')
			[CompletionResult]::new('-NoProfile', '-NoProfile', 'ParameterName', 'Does not load the PowerShell profiles.')
			[CompletionResult]::new('-nop', '-nop', 'ParameterName', 'Does not load the PowerShell profiles.')
			[CompletionResult]::new('-OutputFormat', '-OutputFormat', 'ParameterName', 'Determines how output from PowerShell is formatted.')
			[CompletionResult]::new('-o', '-o', 'ParameterName', 'Determines how output from PowerShell is formatted.')
			[CompletionResult]::new('-of', '-of', 'ParameterName', 'Determines how output from PowerShell is formatted.')
			[CompletionResult]::new('-SettingsFile', '-SettingsFile', 'ParameterName', 'Overrides the system-wide "powershell.')
			[CompletionResult]::new('-settings', '-settings', 'ParameterName', 'Overrides the system-wide "powershell.')
			[CompletionResult]::new('-SSHServerMode', '-SSHServerMode', 'ParameterName', 'Used in sshd_config for running PowerShell as an SSH subsystem.')
			[CompletionResult]::new('-sshs', '-sshs', 'ParameterName', 'Used in sshd_config for running PowerShell as an SSH subsystem.')
			[CompletionResult]::new('-STA', '-STA', 'ParameterName', 'Start PowerShell using a single-threaded apartment.')
			[CompletionResult]::new('-Version', '-Version', 'ParameterName', 'Displays the version of PowerShell.')
			[CompletionResult]::new('-v', '-v', 'ParameterName', 'Displays the version of PowerShell.')
			[CompletionResult]::new('-WindowStyle', '-WindowStyle', 'ParameterName', 'Sets the window style for the session.')
			[CompletionResult]::new('-w', '-w', 'ParameterName', 'Sets the window style for the session.')
			[CompletionResult]::new('-WorkingDirectory', '-WorkingDirectory', 'ParameterName', 'Sets the initial working directory by executing at startup.')
			[CompletionResult]::new('-wd', '-wd', 'ParameterName', 'Sets the initial working directory by executing at startup.')
			[CompletionResult]::new('-Help', '-Help', 'ParameterName', 'Displays help for pwsh.')
			[CompletionResult]::new('-?', '-?', 'ParameterName', 'Displays help for pwsh.')
			[CompletionResult]::new('/?', '/?', 'ParameterName', 'Displays help for pwsh.')
		) | ? CompletionText -Like $wordToComplete*
	}
}
